# terraform {
#   required_providers {
#     aws = {
#       source  = "hashicorp/aws"
#       version = "~> 4.16"
#     }
#   }

#   required_version = ">= 1.2.0"
# }

# provider "aws" {
#   region  = "ap-south-1"
#   access_key = "AKIA4G64AFE2BKN4UIRM"
#   secret_key = "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"
# }

# resource "aws_vpc" "production" {
#   cidr_block = "10.0.0.0/16"

#   tags = {
#     "name" = "Production"
#   }
# }

# resource "aws_internet_gateway" "gw" {
#   vpc_id = aws_vpc.production.id
# }

# resource "aws_route_table" "production-route" {
#   vpc_id = aws_vpc.production.id

#   route {
#     cidr_block = "0.0.0.0/0"
#     gateway_id = aws_internet_gateway.gw.id
#   }

#   route {
#     ipv6_cidr_block        = "::/0"
#     gateway_id =  aws_internet_gateway.gw.id
#   }

#   tags = {
#     Name = "production-route-table"
#   }
# }

# resource "aws_subnet" "production-subnet" {
#   vpc_id     = aws_vpc.production.id
#   cidr_block = "10.0.1.0/24"
#   availability_zone = "ap-south-1b"

#   tags = {
#     Name = "production-subenet"
#   }
# }

# resource "aws_route_table_association" "a" {
#   subnet_id      = aws_subnet.production-subnet.id
#   route_table_id = aws_route_table.production-route.id
# }

# resource "aws_security_group" "allow_tls" {
#   name        = "allow_tls"
#   description = "Allow TLS inbound traffic"
#   vpc_id      = aws_vpc.production.id

#   ingress {
#     description      = "ssh"
#     from_port        = 22
#     to_port          = 22
#     protocol         = "tcp"
#     cidr_blocks      = ["0.0.0.0/0"]
#   }
#   ingress {
#     description      = "web"
#     from_port        = 80
#     to_port          = 80
#     protocol         = "tcp"
#     cidr_blocks      = ["0.0.0.0/0"]
#   }
#   ingress {
#     description      = "HTTPS"
#     from_port        = 443
#     to_port          = 443
#     protocol         = "tcp"
#     cidr_blocks      = ["0.0.0.0/0"]
#   }

#   egress {
#     from_port        = 0
#     to_port          = 0
#     protocol         = "-1"
#     cidr_blocks      = ["0.0.0.0/0"]
#   }

#   tags = {
#     Name = "ALLOW_WEB"
#   }
# }

# resource "aws_network_interface" "production-ni" {
#   subnet_id       = aws_subnet.production-subnet.id
#   private_ips     = ["10.0.1.5"]
#   security_groups = [aws_security_group.allow_tls.id]
# }

# resource "aws_eip" "lb" {
#   network_interface = aws_network_interface.production-ni.id
#   vpc      = true
#   associate_with_private_ip = "10.0.1.5"
#   depends_on = [aws_internet_gateway.gw]
# }

# resource "aws_instance" "webserver" {
#   ami = "ami-068257025f72f470d"
#   instance_type = "t2.micro"
#   availability_zone = "ap-south-1b"
#   key_name = "test"

#   network_interface {
#     network_interface_id = aws_network_interface.production-ni.id
#     device_index         = 0
#   }

#   user_data = <<-EOF
#               #!/bin/bash
#               sudo apt update -y
#               sudo apt install apache2 -y
#               sudo systemctl start apache2
#               sudo systemctl enable apache2
#               sudo bash -c 'echo hello this is from terraform > /var/www/html/index.html'
#               EOF

#   tags = {
#       "name" = "web-server"
#   }
# }






